DROP DATABASE IF EXISTS edtech_assistant;
CREATE DATABASE IF NOT EXISTS edtech_assistant;
USE edtech_assistant;

CREATE TABLE account (
    id INT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(255) NOT NULL,
    hash_password VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    verified_hash TEXT,
    is_activated TINYINT(1) DEFAULT 0,
    role ENUM('STUDENT', 'TEACHER') NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX (email)
);

CREATE TABLE session (
    id INT AUTO_INCREMENT PRIMARY KEY,
    random_hash VARCHAR(255) NOT NULL,
    account_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (account_id) REFERENCES account(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE notification (
    id INT AUTO_INCREMENT PRIMARY KEY,
    account_id INT NOT NULL,
    message TEXT NOT NULL,
    class_assignment_id INT,
    event_type VARCHAR(255) NOT NULL,
    is_read TINYINT(1) DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (account_id) REFERENCES account(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE mail (
    id INT AUTO_INCREMENT PRIMARY KEY,
    subject VARCHAR(255),
    from_email VARCHAR(255),
    to_email VARCHAR(255) NOT NULL,
    body TEXT,
    status VARCHAR(255) NOT NULL,
    type VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);