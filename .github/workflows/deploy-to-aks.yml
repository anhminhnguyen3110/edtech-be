name: Deploy to AKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Create .env.deployment.example file in root directory
      run: echo "${{ secrets.ENV_ALL_DEPLOYMENT_EXAMPLE }}" > .env.deployment.example

    - name: Create .env.deployment.example file in apps/api directory
      run: echo "${{ secrets.ENV_API_DEPLOYMENT_EXAMPLE }}" > apps/api/.env.deployment.example

    - name: Create .env.deployment.example file in apps/assignment directory
      run: echo "${{ secrets.ENV_ASSIGNMENT_DEPLOYMENT_EXAMPLE }}" > apps/assignment/.env.deployment.example

    - name: Create .env.deployment.example file in apps/background-job directory
      run: echo "${{ secrets.ENV_BACKGROUND_JOB_DEPLOYMENT_EXAMPLE }}" > apps/background-job/.env.deployment.example

    - name: Create .env.deployment.example file in apps/chat directory
      run: echo "${{ secrets.ENV_CHAT_DEPLOYMENT_EXAMPLE }}" > apps/chat/.env.deployment.example

    - name: Create .env.deployment.example file in apps/quiz directory
      run: echo "${{ secrets.ENV_QUIZ_DEPLOYMENT_EXAMPLE }}" > apps/quiz/.env.deployment.example

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push API image
      run: |
        docker build -f apps/api/Dockerfile -t minhanh3110/edtech-assistant-api .
        docker push minhanh3110/edtech-assistant-api

    - name: Build and push Assignment image
      run: |
        docker build -f apps/assignment/Dockerfile -t minhanh3110/edtech-assistant-assignment .
        docker push minhanh3110/edtech-assistant-assignment

    - name: Build and push Background Job image
      run: |
        docker build -f apps/background-job/Dockerfile -t minhanh3110/edtech-assistant-background-job .
        docker push minhanh3110/edtech-assistant-background-job

    - name: Build and push Chat image
      run: |
        docker build -f apps/chat/Dockerfile -t minhanh3110/edtech-assistant-chat .
        docker push minhanh3110/edtech-assistant-chat

    - name: Build and push Quiz image
      run: |
        docker build -f apps/quiz/Dockerfile -t minhanh3110/edtech-assistant-quiz .
        docker push minhanh3110/edtech-assistant-quiz

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.2'

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up AKS context
      run: |
        az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_AKS_CLUSTER }}

    - name: Deploy to AKS
      run: |
        # List of directories containing the deployment and service YAML files
        dirs=("k8s/rabbitmq" "k8s/redis" "k8s/prometheus" "k8s/grafana")

        # Deploy services
        for dir in "${dirs[@]}"; do
          kubectl apply -f $dir/deployment.yaml -n edtech-assistant-namespace
          kubectl apply -f $dir/service.yaml -n edtech-assistant-namespace
        done
        
        # List of directories that require waiting between deployments
        wait_dirs=("k8s/api" "k8s/assignment" "k8s/background-job" "k8s/chat" "k8s/quiz")

        for dir in "${wait_dirs[@]}"; do
          kubectl delete -f $dir/deployment.yaml -n edtech-assistant-namespace
        done

        # Wait for 1 minute before deploying the next set of services
        echo "Waiting for 1 minute before deploying the next set of services..."
        sleep 60


        # Deploy services
        for dir in "${wait_dirs[@]}"; do
          kubectl apply -f $dir/deployment.yaml -n edtech-assistant-namespace
          kubectl apply -f $dir/service.yaml -n edtech-assistant-namespace
        done

        # Dashboard
        kubectl apply -f k8s/dashboard/admin.yaml
        kubectl apply -f k8s/dashboard/deployment.yaml
        kubectl apply -f k8s/dashboard/service.yaml

        # Autoscaling
        hpa_dirs=("background-job" "quiz" "rabbit" "redis" "api" "assignment" "chat")
        for hpa in "${hpa_dirs[@]}"; do
          kubectl apply -f k8s/hpas/$hpa.yaml -n edtech-assistant-namespace
        done

        # Verify deployments
        kubectl get pods -n edtech-assistant-namespace
        kubectl get services -n edtech-assistant-namespace